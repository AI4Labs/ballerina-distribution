// Ballerina is designed to ensure that programs written in Ballerina are inherently secure.
// With taint flow analysis (a.k.a taint checking) Ballerina compiler identifies data proportions which may lead to
// untrusted data being passed to security sensitive areas of the program.
//
// By enabling taint checking, Ballerina programs can be made resilient to major security vulnerabilities including
// SQL injection, path manipulation, file manipulation, unauthorized file access,
// and unvalidated redirect (open redirect).
// For more information, see [How to Write Secure Ballerina Programs](https://ballerina.io/swan-lake/learn/how-to-write-secure-ballerina-code/).
//
// Taint analysis is currently disabled by default and can be enabled by providing the `--taint-check` option
// to the Ballerina `run` or `build` commands. It can also be enabled for a project by adding the build option
// `taintCheck = true` under the `[build-options]` section in the `Ballerina.toml` file.
